{"ast":null,"code":"import _classCallCheck from \"/Users/cyh/Desktop/bar-chart-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cyh/Desktop/bar-chart-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cyh/Desktop/bar-chart-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cyh/Desktop/bar-chart-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cyh/Desktop/bar-chart-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cyh/Desktop/bar-chart-app/src/components/barChart.jsx\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Input from \"./input\";\n\nvar BarChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BarChart, _Component);\n\n  function BarChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BarChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dataArray: [{\n        date: \"2013-01\",\n        num: 53\n      }, {\n        date: \"2013-02\",\n        num: 165\n      }, {\n        date: \"2013-03\",\n        num: 269\n      }, {\n        date: \"2013-04\",\n        num: 344\n      }, {\n        date: \"2013-05\",\n        num: 376\n      }, {\n        date: \"2013-06\",\n        num: 410\n      }, {\n        date: \"2013-07\",\n        num: 421\n      }, {\n        date: \"2013-08\",\n        num: 405\n      }, {\n        date: \"2013-09\",\n        num: 376\n      }, {\n        date: \"2013-10\",\n        num: 359\n      }, {\n        date: \"2013-11\",\n        num: 392\n      }, {\n        date: \"2013-12\",\n        num: 433\n      }, {\n        date: \"2014-01\",\n        num: 455\n      }, {\n        date: \"2014-02\",\n        num: 478\n      }],\n      inputValue: {\n        date: \"\",\n        num: \"\"\n      }\n    };\n\n    _this.drawChart = function () {\n      d3.selectAll(\"svg\").remove();\n      var margin = 60;\n      var width = 1000;\n      var height = 600;\n      var canvas = d3.select(\"#svg\").append(\"svg\").attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n      var dataArray = _this.state.dataArray;\n      var max = dataArray[0].num;\n      var min = dataArray[0].num;\n      dataArray.forEach(function (d) {\n        max = max > d.num ? max : d.num;\n        min = min < d.num ? min : d.num;\n      });\n      var yScale = d3.scaleLinear().domain([min - 20, max + 20]).range([height - 80, 0]);\n      canvas.append(\"g\").call(d3.axisLeft(yScale));\n      var xScale = d3.scaleBand().domain(_this.state.dataArray.map(function (d) {\n        return d.date;\n      })).range([0, width - 80]).padding(0.4);\n      canvas.append(\"g\").attr(\"transform\", \"translate(0, 520)\").call(d3.axisBottom(xScale));\n      canvas.selectAll(\"rect\").data(_this.state.dataArray).enter().append(\"rect\").attr(\"x\", function (d) {\n        return xScale(d.date);\n      }).attr(\"y\", function (d) {\n        return yScale(d.num);\n      }).attr(\"height\", function (d) {\n        return height - yScale(d.num) - 80;\n      }).attr(\"width\", xScale.bandwidth());\n      canvas.selectAll(\"text1\").data(_this.state.dataArray).enter().append(\"text\").text(function (d) {\n        return d.num;\n      }).attr(\"x\", function (d) {\n        return xScale(d.date);\n      }).attr(\"y\", function (d) {\n        return yScale(d.num);\n      });\n      canvas.append(\"g\").attr(\"class\", \"grid\").call(d3.axisLeft(yScale).tickSize(-width, 0, 0).tickFormat(\"\"));\n    };\n\n    _this.handleChangeDate = function (event) {\n      var inputValue = _this.state.inputValue;\n      inputValue.date = event.target.value;\n\n      _this.setState({\n        inputValue: inputValue\n      });\n    };\n\n    _this.handleChangeNum = function (event) {\n      var inputValue = _this.state.inputValue;\n      inputValue.num = event.target.value;\n\n      _this.setState({\n        inputValue: inputValue\n      });\n    };\n\n    _this.handleAppend = function () {\n      var inputValue = {\n        date: _this.state.inputValue.date,\n        num: Number(_this.state.inputValue.num)\n      };\n\n      if (!inputValue.num || !_this.validDate(inputValue.date)) {\n        alert(\"Please enter a valid input!\");\n        return;\n      }\n\n      var dataArray = _this.state.dataArray;\n      dataArray.push(inputValue);\n\n      _this.setState({\n        dataArray: dataArray\n      });\n    };\n\n    _this.validDate = function (date) {\n      if (date.length !== 7 || date.indexOf(\"-\") !== 4) return false;\n      if (!Number(date.substring(0, 4)) || !Number(date.substring(5))) return false;\n      return true;\n    };\n\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.drawChart();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.drawChart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Input, {\n        onAppend: this.handleAppend,\n        onChangeDate: this.handleChangeDate,\n        onChangeNum: this.handleChangeNum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BarChart;\n}(Component);\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/cyh/Desktop/bar-chart-app/src/components/barChart.jsx"],"names":["React","Component","d3","Input","BarChart","state","dataArray","date","num","inputValue","drawChart","selectAll","remove","margin","width","height","canvas","select","append","attr","max","min","forEach","d","yScale","scaleLinear","domain","range","call","axisLeft","xScale","scaleBand","map","padding","axisBottom","data","enter","bandwidth","text","tickSize","tickFormat","handleChangeDate","event","target","value","setState","handleChangeNum","handleAppend","Number","validDate","alert","push","length","indexOf","substring"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport Input from \"./input\";\n\nclass BarChart extends Component {\n    state = {\n        dataArray: [\n          {date: \"2013-01\", num: 53},\n          {date: \"2013-02\", num: 165},\n          {date: \"2013-03\", num: 269},\n          {date: \"2013-04\", num: 344},\n          {date: \"2013-05\", num: 376},\n          {date: \"2013-06\", num: 410},\n          {date: \"2013-07\", num: 421},\n          {date: \"2013-08\", num: 405},\n          {date: \"2013-09\", num: 376},\n          {date: \"2013-10\", num: 359},\n          {date: \"2013-11\", num: 392},\n          {date: \"2013-12\", num: 433},\n          {date: \"2014-01\", num: 455},\n          {date: \"2014-02\", num: 478}\n        ],\n        inputValue: {\n          date: \"\",\n          num: \"\"\n        }\n    }\n    componentDidMount() {\n        this.drawChart();\n    }\n    componentDidUpdate() {\n        this.drawChart();\n    }\n\n    drawChart = () => {   \n        d3.selectAll(\"svg\").remove();\n        const margin = 60;\n        const width = 1000;\n        const height = 600;\n    \n        const canvas = d3.select(\"#svg\")\n                       .append(\"svg\")\n                       .attr(\"width\", width)\n                       .attr(\"height\", height)\n                       .append(\"g\")\n                           .attr(\"transform\", \"translate(\" + margin + \",\" + margin + \")\");\n        \n        const dataArray = this.state.dataArray;\n        let max = dataArray[0].num;\n        let min = dataArray[0].num;\n        dataArray.forEach(function(d){\n            max = max > d.num ? max : d.num;\n            min = min < d.num ? min : d.num;\n        });\n\n        const yScale = d3.scaleLinear()\n                       .domain([min-20, max+20])\n                       .range([height - 80, 0]);\n        \n        canvas.append(\"g\")\n              .call(d3.axisLeft(yScale));\n    \n    \n        const xScale = d3.scaleBand()\n                       .domain(this.state.dataArray.map((d) => d.date))\n                       .range([0, width - 80])\n                       .padding(0.4)\n    \n        canvas.append(\"g\")\n              .attr(\"transform\", \"translate(0, 520)\")\n              .call(d3.axisBottom(xScale));\n    \n    \n        canvas.selectAll(\"rect\")\n              .data(this.state.dataArray)\n              .enter()\n                  .append(\"rect\")\n                  .attr(\"x\", (d) => xScale(d.date))\n                  .attr(\"y\", (d) => yScale(d.num))\n                  .attr(\"height\", (d) => height - yScale(d.num) - 80)\n                  .attr(\"width\", xScale.bandwidth());\n        \n        canvas.selectAll(\"text1\")\n              .data(this.state.dataArray)\n              .enter()\n                  .append(\"text\")\n                  .text((d)=>d.num)\n                  .attr(\"x\", (d)=>xScale(d.date))\n                  .attr(\"y\", (d)=>yScale(d.num));\n    \n        canvas.append(\"g\")\n              .attr(\"class\", \"grid\")\n              .call(d3.axisLeft(yScale)\n                      .tickSize(-width, 0, 0)\n                      .tickFormat(\"\"));\n          \n    }\n\n    handleChangeDate = (event) => {\n        let inputValue = this.state.inputValue;\n        inputValue.date = event.target.value;\n        this.setState({inputValue});\n    }\n    handleChangeNum = (event) => {\n      let inputValue = this.state.inputValue;\n      inputValue.num = event.target.value;\n      this.setState({inputValue});\n    }\n    handleAppend = () => {\n      let inputValue = {\n          date: this.state.inputValue.date,\n          num: Number(this.state.inputValue.num)\n      }\n      if(!inputValue.num || !this.validDate(inputValue.date)){\n        alert(\"Please enter a valid input!\");\n        return;\n      }\n      let dataArray = this.state.dataArray;\n      dataArray.push(inputValue);\n      this.setState({dataArray});   \n    }\n    \n    validDate = (date) => {\n        if(date.length !== 7 || date.indexOf(\"-\") !== 4) return false;\n        if(!Number(date.substring(0,4)) || !Number(date.substring(5))) return false;\n        return true;\n    }\n    render() { \n        return (\n        <React.Fragment>\n            <div id=\"svg\"></div>\n            <Input onAppend={this.handleAppend} onChangeDate={this.handleChangeDate} onChangeNum={this.handleChangeNum} />\n        </React.Fragment>\n        );\n    }\n}\n \nexport default BarChart;"]},"metadata":{},"sourceType":"module"}